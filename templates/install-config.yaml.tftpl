apiVersion: v1
baseDomain: ${BASE_DOMAIN} 
controlPlane: 
  hyperthreading: ${MASTER_HYPERTHREADING}   
  architecture: ${MASTER_ARCHITECTURE}
  name: master
  platform:
    aws:
      type: ${MASTER_NODE_TYPE}
      zones:
        - ${AWS_REGION}a
        - ${AWS_REGION}b
        - ${AWS_REGION}c
  replicas: ${MASTER_NODE_QTY}
compute: 
- hyperthreading: ${WORKER_HYPERTHREADING} 
  architecture: ${WORKER_ARCHITECTURE}
  name: worker
  platform: 
    aws:
      type: ${WORKER_NODE_TYPE}
      rootVolume:
        iops: ${WORKER_VOLUME_IOPS}
        size: ${WORKER_VOLUME_SIZE}
        type: ${WORKER_VOLUME_TYPE}
      zones:
        - ${AWS_REGION}a
        - ${AWS_REGION}b
        - ${AWS_REGION}c
  replicas: ${WORKER_NODE_QTY}
metadata:
  name: ${CLUSTER_NAME} 
networking:
  clusterNetwork:
  - cidr: ${CLUSTER_CIDR}
    hostPrefix: ${CLUSTER_HOST_PREFIX}
  machineNetwork:
  - cidr: ${MACHINE_CIDR}
  networkType: ${NETWORK_TYPE}
  serviceNetwork:
  - ${SERVICE_NETWORK_CIDR}
platform:
  aws:
    region: ${AWS_REGION}
    userTags:
      environment: ${RESOURCE_GROUP}
%{ if EXISTING_VPC == true}
    subnets:
      - ${PRIVATE_SUBNET1}
      - ${PRIVATE_SUBNET2}
      - ${PRIVATE_SUBNET3}
%{ if PUBLISH == "External" }
      - ${PUBLIC_SUBNET1}
      - ${PUBLIC_SUBNET2}
      - ${PUBLIC_SUBNET3}
%{ endif }
%{ endif }
pullSecret: '${PULL_SECRET}' 
publish: ${PUBLISH}
%{ if ENABLE_FIPS == true }
fips: true 
%{ endif }
%{ if PUBLIC_SSH_KEY != "" }
sshKey: ${PUBLIC_SSH_KEY} 
%{ endif }